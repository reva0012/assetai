{"version":3,"sources":["/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/$_lazy_route_resource lazy","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/app.component.css","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/app.component.html","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/app.component.ts","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/app.module.ts","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/employee/employee.component.css","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/employee/employee.component.html","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/employee/employee.component.ts","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/shared/employee.service.ts","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/environments/environment.ts","/Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-employee>\\n    \\n</app-employee>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './employee/employee.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/employee/employee.component.css\n// module id = ../../../../../src/app/employee/employee.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col 12\\\">\\n    <div class=\\\"card\\\" *ngIf=\\\"open.current\\\">\\n      <div class=\\\"card-content white-text\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s5\\\">\\n            <form #employeeForm=\\\"ngForm\\\">\\n              <input type = \\\"hidden\\\"  name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee._id\\\">\\n              \\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"Company\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.Company\\\" readonly>\\n                  <label > Company: </label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"Fleet\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.Fleet\\\" readonly>\\n                  <label> Fleet:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"VesselIMO\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.VesselIMO\\\" readonly>\\n                  <label> Vessel IMO:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"VesselName\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.VesselName\\\"readonly>\\n                  <label> Vessel Name:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"Equipment\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.Equipment\\\"readonly>\\n                  <label> Equipment:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"Parameter\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.Parameter\\\"readonly>\\n                  <label> Parameter:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"Count\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.Count\\\"readonly>\\n                  <label> Count:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"TotalDuration\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.TotalDuration\\\"readonly>\\n                  <label> Total Duration:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"LongestDuration\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.LongestDuration\\\"readonly>\\n                  <label> Longest Duration:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"LongestDurationStartTime\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.LongestDurationStartTime\\\"readonly>\\n                  <label> Longest Duration Start Time:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"AlertType\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.AlertType\\\"readonly>\\n                  <label> Alert Type:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"Status\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.Status\\\"readonly >\\n                  <label> Status:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"AOTRemarks\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.AOTRemarks\\\" readonly>\\n                  <label> AOT Remarks:</label>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"MarkAlert\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.MarkAlert\\\">\\n                  <label> Mark Alert:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"RootCause\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.RootCause\\\">\\n                  <label> Root Cause:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"ActionTaken\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.ActionTaken\\\" >\\n                  <label> Action Taken:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"UseCase\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.UseCase\\\">\\n                  <label> Use Case:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"CostAvoidance\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.CostAvoidance\\\">\\n                  <label> Cost Avoidance:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"RemarksforCostAvoidance\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.RemarksforCostAvoidance\\\" >\\n                  <label> Remarks for Cost Avoidance:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"RoleofSMARTShip\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.RoleofSMARTShip\\\" >\\n                  <label> Role of SMARTShip:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"PotentialSeverity\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.PotentialSeverity\\\" >\\n                  <label> Potential Severity:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"PotentialConsequence\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.PotentialConsequence\\\" >\\n                  <label> Potential Consequence:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"Month\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.Month\\\"readonly >\\n                  <label> Month:</label>\\n                </div>\\n              </div>\\n\\n               <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"CurrentTSI\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.CurrentTSI\\\" readonly>\\n                  <label> Current TSI:</label>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <input type = \\\"text\\\"  name=\\\"EmailID\\\" #name=\\\"ngModel\\\" [(ngModel)]= \\\"employeeService.selectedEmployee.EmailID\\\"readonly >\\n                  <label> TSI's Email ID:</label>\\n                </div>\\n              </div>\\n              \\n              <div class=\\\"row\\\">\\n                <div class=\\\"input-field col s12\\\">\\n                  <button class= \\\"btn btn-custom right\\\" type=\\\"button\\\" (click)=\\\"onSubmit(employeeForm)\\\">Save</button>\\n                  <button class= \\\"btn btn-custom right\\\" type=\\\"button\\\" (click)=\\\"resetForm(employeeForm)\\\">Reset</button>\\n                </div>\\n              </div>\\n              </form>\\n          </div>\\n        </div>\\n        </div>\\n        </div>\\n</div>\\n          <div class=\\\"data\\\">\\n            <table class = \\\"responsive-table highlight\\\">\\n              <thead>\\n                <tr>\\n                  <th> </th>\\n                  <th> Company\\t</th>\\n                  <th> Fleet\\t</th>\\n                  <th> Vessel IMO\\t</th>\\n                  <th> Vessel Name\\t</th>\\n                  <th> Equipment\\t</th>\\n                  <th> Parameter\\t</th>\\n                  <th> Count\\t</th>\\n                  <th> Total Duration\\t</th>\\n                  <th> Longest Duration \\t</th>\\n                  <th> Longest Duration Start Time\\t</th>\\n                  <th> Alert Type\\t</th>\\n                  <th> Status\\t</th>\\n                  <th> AOT Remarks\\t</th>\\n                  <th> Mark Alert\\t</th>\\n                  <th> Root Cause\\t</th>\\n                  <th> Action Taken\\t</th>\\n                  <th> Use Case \\t</th>\\n                  <th> Cost Avoidance\\t</th>\\n                  <th> Remarks for Cost Avoidance\\t</th>\\n                  <th> Role of SMARTShip\\t</th>\\n                  <th> Potential Severity\\t</th>\\n                  <th> Potential Consequence\\t</th>\\n                  <th> Screenshot\\t</th>\\n                  <th> Month</th>\\n                  <th> CurrentTSI\\t</th>\\n                  <th> TSI's Email ID </th>\\n                  <th></th>\\n                </tr>\\n              </thead>\\n              <tr *ngFor=\\\"let emp of employeeService.employees\\\">\\n                <td>\\n                  <a class=\\\"action-btn\\\" (click)= \\\"onEdit(emp); open.current= !open.current;\\\" >\\n                    <i class=\\\"material-icons\\\"> edit </i>\\n                  </a>\\n                </td>\\n                <td>{{emp.Company}} </td>\\n                <td>{{emp.Fleet}} </td>\\n                <td>{{emp.VesselIMO}}\\t</td>\\n                <td>{{emp.VesselName}}\\t</td>\\n                <td>{{emp.Equipment}}\\t</td>\\n                <td>{{emp.Parameter}}</td>\\n                <td>{{emp.Count}}\\t</td>\\n                <td>{{emp.TotalDuration}}\\t</td>\\n                <td>{{emp.LongestDuration}} \\t</td>\\n                <td>{{emp.LongestDurationStartTime}}\\t</td>\\n                <td>{{emp.AlertType}}\\t</td>\\n                <td>{{emp.Status}}\\t</td>\\n                <td>{{emp.AOTRemarks}}\\t</td>\\n                <td>{{emp.MarkAlert}}\\t</td>\\n                <td>{{emp.RootCause}}\\t</td>\\n                <td>{{emp.ActionTaken}}\\t</td>\\n                <td>{{emp.UseCase}}\\t</td>\\n                <td>{{emp.CostAvoidance}}\\t\\n                <td>{{emp.RemarksforCostAvoidance}}\\t</td>\\n                <td>{{emp.RoleofSMARTShip}}\\t</td>\\n                <td>{{emp.PotentialSeverity}}\\t</td>\\n                <td>{{emp.PotentialConsequence}}\\t</td>\\n                <td>{{emp.Screenshot}}\\t</td>\\n                <td>{{emp.Month}}\\t</td>\\n                <td>{{emp.CurrentTSI}}\\t</td>\\n                <td>{{emp.EmailID}}</td>\\n              </tr>\\n              </table>\\n          </div>\\n        \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/employee/employee.component.html\n// module id = ../../../../../src/app/employee/employee.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n\nimport { EmployeeService } from '../shared/employee.service';\nimport { Employee } from '../shared/employee.model';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css'],\n  providers: [EmployeeService]\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.resetForm();\n    this.refreshEmployeeList();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form)\n      form.reset();\n    this.employeeService.selectedEmployee = {\n      _id: \"\",\n      Company: \"\",\n      Fleet: \"\",\n      VesselIMO: \"\",\n      VesselName: \"\",\n      Equipment: \"\",\n      Parameter: \"\",\n      Count: \"\",\n      TotalDuration: \"\",\n      LongestDuration: \"\",\n      LongestDurationStartTime: \"\",\n      AlertType: \"\",\n      Status: \"\",\n      AOTRemarks: \"\",\n      MarkAlert: \"\",\n      RootCause: \"\",\n      ActionTaken : \"\",\n      UseCase : \"\",\n      CostAvoidance: \"\",\n      RemarksforCostAvoidance: \"\",\n      RoleofSMARTShip: \"\",\n      PotentialSeverity: \"\",\n      PotentialConsequence: \"\",\n      Screenshot: \"\",\n      Month: \"\",\n      CurrentTSI: \"\",\n      EmailID: \"\"\n    }\n  }\n\n  onSubmit(form: NgForm) { \n    console.log(form);\n      this.employeeService.putEmployee(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshEmployeeList();\n        M.toast({ html: 'Updated successfully', classes: 'rounded' });\n      });\n  }\n\n  refreshEmployeeList() {\n    this.employeeService.getEmployeeList().subscribe((res) => {\n      this.employeeService.employees = res as Employee[];\n    });\n  }\n\n  onEdit(emp: Employee) {\n    this.employeeService.selectedEmployee = emp;\n  }\n\n  open={\n    current: false\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/employee/employee.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\nimport { Employee } from './employee.model';\n\n@Injectable()\nexport class EmployeeService {\n  selectedEmployee: Employee;\n  employees: Employee[];\n  readonly baseURL = 'employees';\n\n  constructor(private http: HttpClient) { }\n\n  postEmployee(emp: Employee) {\n    return this.http.post(this.baseURL, emp);\n  }\n\n  getEmployeeList() {\n    return this.http.get(this.baseURL);\n  }\n\n  putEmployee(emp: Employee) {\n    return this.http.put(this.baseURL + `/${emp._id}`, emp);\n  }\n\n  deleteEmployee(_id: string) {\n    return this.http.delete(this.baseURL + `/${_id}`);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/app/shared/employee.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/reva/MEAN-Stack-CRUD-Operations/AngularApp/src/main.ts"],"sourceRoot":"webpack:///"}